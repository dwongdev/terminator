name: Create Release and Build Binaries

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.create_release.outputs.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          generate_release_notes: true

  build_and_upload:
    name: Build and Upload
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            frontend/node_modules
            backend/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: PUPPETEER_SKIP_DOWNLOAD=true bun install

      - name: Build frontend
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing contents:"
          ls -la
          echo "Building frontend..."
          bun run build

      - name: Determine target and output name
        id: target
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            if [ "${{ matrix.arch }}" == "x64" ]; then
              echo "TARGET=bun-linux-x64" >> $GITHUB_ENV
              echo "OUTPUT_NAME=terminator-linux-x64" >> $GITHUB_ENV
            else
              echo "TARGET=bun-linux-aarch64" >> $GITHUB_ENV
              echo "OUTPUT_NAME=terminator-linux-arm64" >> $GITHUB_ENV
            fi
          else
            if [ "${{ matrix.arch }}" == "x64" ]; then
              echo "TARGET=bun-darwin-x64" >> $GITHUB_ENV
              echo "OUTPUT_NAME=terminator-macos-x64" >> $GITHUB_ENV
            else
              echo "TARGET=bun-darwin-aarch64" >> $GITHUB_ENV
              echo "OUTPUT_NAME=terminator-macos-arm64" >> $GITHUB_ENV
            fi
          fi

      - name: Compile backend
        run: |
          mkdir -p ./dist
          bun build backend/src/index.ts --compile --target=${{ env.TARGET }} --outfile=./dist/${{ env.OUTPUT_NAME }}

      - name: Upload backend binary
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          files: ./dist/${{ env.OUTPUT_NAME }}

  package_and_upload_frontend:
    name: Package and Upload Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            frontend/node_modules
            backend/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: PUPPETEER_SKIP_DOWNLOAD=true bun install

      - name: Build frontend
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing contents:"
          ls -la
          echo "Building frontend..."
          bun run build

      - name: Package frontend
        run: tar -czvf frontend.tar.gz -C backend/public .

      - name: Upload frontend artifact
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          files: ./frontend.tar.gz
